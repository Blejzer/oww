var ver="owwServer v.0.8-beta.20f";var express=require("express");var app=express();var http=require("http").Server(app);var io=require("socket.io")(http);const fs=require("fs");var eventList;var personList;const net=require("net");var bodyParser=require("body-parser");console.log(new Date());console.log(ver,"starting with initialization sequence: ");console.log("Loaded all required modules");app.enable("trust proxy");app.use("/bootstrap",express["static"](__dirname+"/bootstrap"));app.use("/scripts",express["static"](__dirname+"/node_modules/"));app.use("/custom",express["static"](__dirname+"/custom"));app.use("/images",express["static"](__dirname+"/images"));app.use("/application",express["static"](__dirname+"/application"));app.use("/views",express["static"](__dirname+"/views"));app.use("/.well-known",express["static"]("/.well-known"));app.set("view engine","ejs");console.log("All static routes are set");console.log("*********************************************************************\n");app.get("/sociale",function(i,g){var h=i.headers["user-agent"];console.log("This is SOCIALE req.url: ",i.url);var e=i.headers["x-forwarded-for"]||i.connection.remoteAddress;console.log(new Date(),"Client IP Address - assuming remote: socket.handshake.address: ",e);const c=[/facebookexternalhit\/[0-9]/,/Faceboot/,/Twitterbot\/[0-9]/];const b=c.some(function(j){return j.test(h)});console.log("User-Agent: "+h);console.log("isMatch: ",b);if(!b){console.log("FB or Twitter visitor: Redirecting...");g.redirect("/")}else{console.log("serving bots");var f={};f.address=e;var d={data:"newconn",visitor:f};jack=JSON.stringify(d);var a=new net.Socket();a.on("error",function(j){console.error(new Date(),"Error connecting to the processor. shutting down the server...",j);a.end();process.exit(0)});a.connect(3001,"localhost",function(){console.log(new Date(),"Server: Connected to processor");a.write(jack)});a.on("data",function(k){var j=JSON.parse(k);j.num=io.engine.clientsCount;console.log(new Date(),"Server: Response from the processor: %s",j.event[0]);g.render("social/event.ejs",{event:j.event[0]},function(m,l){g.send(l)});f.id=j.visitorid;a.end()})}});app.get("/socialp",function(i,g){var h=i.headers["user-agent"];console.log("This is SOCIALP req.url: ",i.url);var e=i.headers["x-forwarded-for"]||i.connection.remoteAddress;console.log(new Date(),"Client IP Address - assuming remote: socket.handshake.address: ",e);const c=[/facebookexternalhit\/[0-9]/,/Faceboot/,/Twitterbot\/[0-9]/];const b=c.some(function(j){return j.test(h)});console.log("User-Agent: "+h);console.log("isMatch: ",b);if(!b){console.log("FB or Twitter visitor: Redirecting...");g.redirect("/")}else{console.log("serving bots");var f={};f.address=e;var d={data:"newconn",visitor:f};jack=JSON.stringify(d);var a=new net.Socket();a.on("error",function(j){console.error(new Date(),"Error connecting to the processor. shutting down the server...",j);a.end();process.exit(0)});a.connect(3001,"localhost",function(){console.log(new Date(),"Server: Connected to processor");a.write(jack)});a.on("data",function(k){var j=JSON.parse(k);j.num=io.engine.clientsCount;console.log(new Date(),"Server: Response from the processor: %s",j.person[0]);g.render("social/person.ejs",{event:j.person[0]});f.id=j.visitorid;a.end()})}});app.get("/home",function(b,a){var g=b.headers["user-agent"];console.log("This is HOME req.url: ",b.url);var f=b.headers["x-forwarded-for"]||b.connection.remoteAddress;console.log(new Date(),"Client IP Address - assuming remote: socket.handshake.address: ",f);var d={};d.address=f;var c={data:"newconn",visitor:d};jack=JSON.stringify(c);var e=new net.Socket();e.on("error",function(h){console.error(new Date(),"Error connecting to the processor. shutting down the server...",h);e.end();process.exit(0)});e.connect(3001,"localhost",function(){console.log(new Date(),"Server: Connected to processor");e.write(jack)});e.on("data",function(i){var h=JSON.parse(i);h.num=io.engine.clientsCount;console.log(new Date(),"Server: Response from the processor: %s",h.event[0]);a.send(h);d.id=h.visitorid;e.end()})});app.get("*",function(c,a){console.log("req.headers",c.headers);var e=c.headers["user-agent"];console.log("This is * req.url: ",c.url);const d=[/person/,/event/];const b=d.some(function(f){return f.test(c.url)});console.log("isMatch: ",b);if(b){a.redirect("/")}else{a.sendFile(__dirname+"/views/index.html")}});console.log("index.html page prepped to be served");console.log("*********************************************************************\n");console.log("*********************************************************************\n");console.log("I guess we're all set.");console.log("*********************************************************************\n");console.log(ver," is online and ready!");console.log("*********************************************************************\n");io.sockets.on("connection",function(a){a.removeAllListeners();var f=a.handshake.address;var b=new Date();console.log(b,"Client IP Address - assuming remote: socket.handshake.address: ",f);var d={};d.address=f;d.nowDate=b;var c={data:"newconn",visitor:d};jack=JSON.stringify(c);var e=new net.Socket();e.on("error",function(g){console.error(new Date(),"Error connecting to the processor. shutting down the server...",g);e.end();process.exit(0)});e.connect(3001,"localhost",function(){e.write(jack)});e.on("data",function(h){var g=JSON.parse(h);a.emit("test",g.event[0],g.person[0]);d.id=g.visitorid;io.sockets.emit("conn",io.engine.clientsCount);io.emit("eventList",JSON.stringify(g.eventList));io.emit("personList",JSON.stringify(g.personList));e.end()});a.on("disconnect",function(){console.log(new Date(),"Diskonekcija: Broj trenutnih korisnika: ",io.engine.clientsCount);io.sockets.emit("conn",io.engine.clientsCount);a.removeAllListeners();a.leaveAll()});a.on("event",function(k,i,h){console.log(new Date(),"Registrujem event socket ",h);var g={data:"eventWord",visitor:d,word:i,event_id:h};jack=JSON.stringify(g);var j=new net.Socket();j.connect(3001,"localhost",function(){console.log(new Date(),"Server: eword: Connected to processor",jack);j.write(jack)});io.emit("eventWord",i);j.on("data",function(m){var l=JSON.parse(m);console.log("data: ",l);io.emit("eventList",JSON.stringify(l));j.end()})});a.on("person",function(k,g,h){var i={data:"personWord",visitor:d,word:g,person_id:h};jack=JSON.stringify(i);var j=new net.Socket();j.connect(3001,"localhost",function(){console.log("Server: pword: Connected to processor",jack);j.write(jack)});io.emit("personWord",g);j.on("data",function(m){var l=JSON.parse(m);io.emit("personList",JSON.stringify(l));j.end()})});a.on("newPersonPageLoaded",function(g){console.log("Registrujem personPageLoaded socket ",g);var h={data:"newPersonPageLoaded",person_id:g};jack=JSON.stringify(h);var i=new net.Socket();i.connect(3001,"localhost",function(){console.log("Server: newPersonPageLoaded: Connected to Processor");i.write(jack)});i.on("data",function(k){var j=JSON.parse(k);var j=JSON.parse(k);console.log("list",j);console.log("list[0]",j[0]);console.log("test",j[0].global);console.log("list[1]",j[1].continent);a.emit("personCtnPageSuccess",j[1].continent);a.emit("personPageSuccess",j[0].global);i.end()})});a.on("newEventPageLoaded",function(h){console.log("Registrujem newEventPageLoaded socket ",h);var g={data:"newEventPageLoaded",event_id:h};jack=JSON.stringify(g);var i=new net.Socket();i.connect(3001,"localhost",function(){console.log("Server: newEventPageLoaded: Connected to Processor");i.write(jack)});i.on("data",function(k){var j=JSON.parse(k);console.log("newEventPageLoaded list: ",j);console.log("newEventPageLoaded list[0]: ",j[0]);console.log("test",j[0].global);console.log("list[1]",j[1].continent);a.emit("eventCtnPageSuccess",j[1].continent);a.emit("eventPageSuccess",j[0].global);i.end()})});a.on("checkarchive",function(h,g){console.log("Registrujem checkarchive socket ",h,g);var i={data:h,week:g};jack=JSON.stringify(i);var j=new net.Socket();j.connect(3001,"localhost",function(){console.log("Server: checkarchive: Connected to Processor");j.write(jack)});j.on("data",function(l){var k=JSON.parse(l);console.log("checkarchive list: ",k);a.emit("checkOK",JSON.stringify(k));console.log("checkOK emitted! ",k);j.end()})})});http.listen(8088,function(){console.log(ver," Initialization sequence complete. ");console.log(new Date(),"Started listening on port:80")});