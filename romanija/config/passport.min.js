var LocalStrategy=require("passport-local").Strategy;var mysql=require("mysql");var bcrypt=require("bcrypt-nodejs");var dbconfig=require("./database");var connection;function handleDisconnect(){if(connection){connection.destroy()}connection=mysql.createConnection(dbconfig.connection);connection.connect(function(a){if(a){console.log("error when connecting to db:",a);setTimeout(handleDisconnect,2000)}connection.query("USE "+dbconfig.database)});connection.on("error",function(a){console.log("db error",a);if(a.code==="PROTOCOL_CONNECTION_LOST"){handleDisconnect()}else{throw a}})}handleDisconnect();module.exports=function(a){a.serializeUser(function(c,b){b(null,c.id)});a.deserializeUser(function(c,b){connection.query("SELECT * FROM korisnici WHERE id = ? ",[c],function(d,e){if(d){throw d}b(d,e[0])})});a.use("local-signup",new LocalStrategy({usernameField:"username",passwordField:"password",passReqToCallback:true},function(d,e,c,b){connection.query("SELECT * FROM korisnici WHERE username = ?",[e],function(h,i){if(h){return b(h)}if(i.length){return b(null,false,d.flash("signupMessage","That username is already taken."))}else{var f={username:e,password:bcrypt.hashSync(c,null,null)};var g="INSERT INTO korisnici ( username, password ) values (?,?)";connection.query(g,[f.username,f.password],function(j,k){f.id=k.insertId;return b(null,f)})}})}));a.use("local-login",new LocalStrategy({usernameField:"username",passwordField:"password",passReqToCallback:true},function(d,e,c,b){connection.query("SELECT * FROM korisnici WHERE username = ?",[e],function(f,g){if(f){return b(f)}if(!g.length){return b(null,false,d.flash("loginMessage","No user found."))}if(!bcrypt.compareSync(c,g[0].password)){return b(null,false,d.flash("loginMessage","Oops! Wrong password."))}return b(null,g[0])})}))};